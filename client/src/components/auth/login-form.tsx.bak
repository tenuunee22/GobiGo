import { useState } from "react";
import { useToast } from "@/hooks/use-toast";
import { useLocation } from "wouter";
import { loginUser, loginWithGoogle } from "@/lib/firebase";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Checkbox } from "@/components/ui/checkbox";
import { useAuth } from "@/contexts/auth-context";

interface LoginFormProps {
  onToggleForm: () => void;
}

export function LoginForm({ onToggleForm }: LoginFormProps) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [rememberMe, setRememberMe] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const { toast } = useToast();
  const [, setLocation] = useLocation();
  const { setUser } = useAuth();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsLoading(true);

    try {
      const userCredential = await loginUser(email, password);
      toast({
        title: "Амжилттай нэвтэрлээ",
        description: "Тавтай морил!",
      });
      
      // Get user data from Firestore to determine role
      const userData = await import("@/lib/firebase").then(m => m.getUserData(userCredential.uid));
      if (userData) {
        // Set user data in auth context
        setUser({
          uid: userCredential.uid,
          email: userCredential.email,
          displayName: userCredential.displayName,
          ...userData
        });
        
        // Redirect to home page
        setLocation("/");
      }
    } catch (error: any) {
      console.error("Login error:", error);
      toast({
        title: "Нэвтрэх үйлдэл амжилтгүй болсон",
        description: error.message || "Нэвтрэх үед алдаа гарлаа",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  const handleGoogleLogin = async () => {
    setIsLoading(true);
    try {
      const userCredential = await loginWithGoogle();
      toast({
        title: "Амжилттай нэвтэрлээ",
        description: "Тавтай морил!",
      });
      
      // Get user data from Firestore to determine role
      const userData = await import("@/lib/firebase").then(m => m.getUserData(userCredential.uid));
      if (userData) {
        // Set user data in auth context
        setUser({
          uid: userCredential.uid,
          email: userCredential.email,
          displayName: userCredential.displayName,
          ...userData
        });
        
        // Redirect to home page
        setLocation("/");
      }
    } catch (error: any) {
      console.error("Google login error:", error);
      toast({
        title: "Google-ээр нэвтрэх амжилтгүй болсон",
        description: error.message || "Google-ээр нэвтрэх үед алдаа гарлаа",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="bg-white py-6 px-4 shadow sm:rounded-lg">
      <h2 className="text-center text-2xl font-bold text-gray-900 mb-4">Бүртгэлдээ нэвтрэх</h2>
      <p className="mb-6 text-center text-sm text-gray-600">
        Эсвэл{" "}
        <a
          href="#"
          onClick={(e) => {
            e.preventDefault();
            onToggleForm();
          }}
          className="font-medium text-primary hover:text-indigo-500"
        >
          шинэ бүртгэл үүсгэх
        </a>
      </p>
          <form className="space-y-6" onSubmit={handleSubmit}>
            <div>
              <Label htmlFor="email">Имэйл хаяг</Label>
              <div className="mt-1">
                <Input
                  id="email"
                  name="email"
                  type="email"
                  autoComplete="email"
                  required
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  disabled={isLoading}
                />
              </div>
            </div>

            <div>
              <Label htmlFor="password">Нууц үг</Label>
              <div className="mt-1">
                <Input
                  id="password"
                  name="password"
                  type="password"
                  autoComplete="current-password"
                  required
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  disabled={isLoading}
                />
              </div>
            </div>

            <div className="flex items-center justify-between">
              <div className="flex items-center">
                <Checkbox
                  id="remember-me"
                  checked={rememberMe}
                  onCheckedChange={(checked) => setRememberMe(!!checked)}
                  disabled={isLoading}
                />
                <Label
                  htmlFor="remember-me"
                  className="ml-2 block text-sm text-gray-900"
                >
                  Намайг сана
                </Label>
              </div>

              {/* Removed "Forgot password" link */}
            </div>

            <div>
              <Button
                type="submit"
                className="w-full"
                disabled={isLoading}
              >
                Нэвтрэх
              </Button>
            </div>
          </form>

          <div className="mt-6">
            <div className="relative">
              <div className="absolute inset-0 flex items-center">
                <div className="w-full border-t border-gray-300"></div>
              </div>
              <div className="relative flex justify-center text-sm">
                <span className="px-2 bg-white text-gray-500">
                  Эсвэл үргэлжлүүлэх
                </span>
              </div>
            </div>

            <div className="mt-6 grid grid-cols-2 gap-3">
              <div>
                <Button
                  variant="outline"
                  className="w-full inline-flex justify-center"
                  onClick={handleGoogleLogin}
                  disabled={isLoading}
                >
                  <span className="sr-only">Google-ээр нэвтрэх</span>
                  <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                    <path d="M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z"></path>
                  </svg>
                </Button>
              </div>

              <div>
                <Button
                  variant="outline"
                  className="w-full inline-flex justify-center"
                  disabled={isLoading}
                >
                  <span className="sr-only">Facebook-ээр нэвтрэх</span>
                  <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                    <path fillRule="evenodd" d="M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z" clipRule="evenodd" />
                  </svg>
                </Button>
              </div>
            </div>
          </div>
    </div>
  );
}
